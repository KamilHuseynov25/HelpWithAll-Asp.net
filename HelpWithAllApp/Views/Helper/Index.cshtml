@model Helper
@using HelpWithAllApp.Repositories.Base
@inject IHelperRepository helperRepository

@{
    var helpers = await helperRepository.SelectAllHelpersAsync();
}
<h1>@ViewData["Title"]</h1>


<div>
    <h1>Hello dear, Welcome to Helper page here you can become helper and help people as you can</h1>
<a class="btn btn-primary" asp-controller="Helper" asp-action="CreateHelper">
    Create Helper Account
</a>

@if(helpers == null || helpers.Any() == false) {
    <h3>...</h3>
}
else{
<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">Id</th>
            <th scope="col">Name</th>
            <th scope="col">Surname</th>
            <th scope="col">Profession</th>
            <th scope="col">Payment Per Hour</th>
            <th scope="col"></th>
            <th scope="col"></th>
        </tr>
    
    </thead>
    <tbody>
@foreach(var helper1 in helpers){
<tr id="row-@helper1.Id">
    <th>@helper1.Id</th>
    <td>@helper1.Name</td>
    <td>@helper1.Surname</td>
    <td>@helper1.Profession</td>
    <td>@helper1.PaymentPerHour</td>
    <td><button class="btn btn-danger" onclick="DeleteHelperAsync(@helper1.Id)">Delete</button></td>
    <td><a class="btn btn-info" asp-controller="Helper" asp-action="UpdateHelper" asp-route-id="@helper1.Id">Change Helper Info</a></td>
    
</tr>
}
</tbody>
</table>
}


</div>

<script>
    async function DeleteHelperAsync(helperId) {
    try {
        const response = await fetch(`http://localhost:5155/Helper/DeleteHelper/${helperId}`, {
            method: 'DELETE'
        });

        if (response.ok) {
            document.getElementById(`row-${helperId}`).remove();
        } else {
            console.error("Failed to delete helper:", response);
        }
    } catch (error) {
        console.error("Request failed", error);
    }
}

</script>